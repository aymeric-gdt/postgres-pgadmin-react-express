version: '3'

services:
  traefik:
    image: traefik:v3.2
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=admin@admin.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - app-network
      - backend-network

  # Vos autres services...

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    env_file:
      - ./docker/postgres.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./files/init:/docker-entrypoint-initdb.d
    networks:
      - backend-network

  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - ./docker/pgadmin.env
    volumes:
      - ./docker/pgadmin_servers.json:/pgadmin4/servers.json
    networks:
      - backend-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.localhost`)"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.tls=true"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"


  backend:
    build:
      context: ./backend
      dockerfile: ../docker/backend.dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./docker/backend.env
    expose:
      - "3000"
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.backend.rule=Host(`api.localhost`)"
    - "traefik.http.routers.backend.entrypoints=websecure"
    - "traefik.http.routers.backend.tls=true"
    - "traefik.http.services.backend.loadbalancer.server.port=3000"
    depends_on:
      - postgres
      - traefik
    networks:
      - backend-network
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend.dockerfile
    ports:
      - "8080:3000"
    env_file:
      - ./docker/frontend.env
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.frontend.rule=Host(`localhost`)"
    - "traefik.http.routers.frontend.entrypoints=websecure"
    - "traefik.http.routers.frontend.tls.certresolver=myresolver"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
      - traefik
    networks:
      - app-network


networks:
  backend-network:
    driver: bridge
  app-network:
    driver: bridge

volumes:
  postgres_data:
